generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int         @id @default(autoincrement())
  uuid          String      @default(uuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  email         String      @unique
  password      String
  userDetails   UserDetails @relation(fields: [userDetailsId], references: [id])
  userDetailsId Int
}

model UserDetails {
  id                        Int             @id @default(autoincrement())
  role                      String          @default("VIEWER")
  firstName                 String
  lastName                  String
  store                     String?
  phone                     String?
  department                String?
  homeAddress               String?
  emergencyContactPrimary   String?
  emergencyContactSecondary String?
  user                      User[]
  qualifications            Qualification[]
}

model Customer {
  id            Int            @id @default(autoincrement())
  uuid          String         @default(uuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  email         String         @unique
  firstName     String
  lastName      String
  address       String
  prescriptions Prescription[]
  comments      String
  phone         String
}

model Prescription {
  id               Int       @id @default(autoincrement())
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  totalRefills     Int
  refillsRemaining Int
  lastRefillDate   DateTime
  refillFrequency  Int
  nextRefillDate   DateTime
  customer         Customer  @relation(fields: [customerId], references: [id])
  customerId       Int
  products         Product[]
}

model Product {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  prescription   Prescription @relation(fields: [prescriptionId], references: [id])
  prescriptionId Int
  name           String
  description    String
}

model Qualification {
  id            Int          @id @default(autoincrement())
  updatedAt     DateTime     @updatedAt
  createdAt     DateTime     @default(now())
  expriresAt    DateTime
  name          String
  userDetails   UserDetails? @relation(fields: [userDetailsId], references: [id])
  userDetailsId Int?
}
